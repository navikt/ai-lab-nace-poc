dist: trusty
sudo: required

cache:
  directories:
  - "$HOME/google-cloud-sdk/"

git:
  depth: 10000

env:
  global:
  - PROJECT_NAME=nav-datalab
  - IMAGE_NAME=ai-lab-nace-poc
  - DEPLOYMENT_NAME=deployment/ai-lab-nace-poc
  - CLUSTER_NAME=ai-lab-nace-poc-cluster
  - RELEASE_VERSION=$(git rev-list --count master)
  - SERVICE_ACCOUNT=travis-ci@${PROJECT_NAME}.iam.gserviceaccount.com
  - ZONE_TAG=us-central1-a

before_install:
  # Download and unpack gcloud SDK if not already cached
  - gcloud version || true
  - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
  - source /home/travis/google-cloud-sdk/path.bash.inc
  - gcloud --quiet version
  - gcloud --quiet components update
  - gcloud --quiet components update kubectl
  # Decrypt gcloud service account key
  - openssl aes-256-cbc -K $encrypted_23b53ae62afc_key -iv $encrypted_23b53ae62afc_iv -in client_secret.json.enc -out client_secret.json -d
  # Autohorize access to gcloud platform using service account key
  - gcloud auth activate-service-account ${SERVICE_ACCOUNT} --key-file client_secret.json --project=${PROJECT_NAME}

jobs:
  include:
  - stage: build react app and docker image and push image to gcloud
    script:
    # Build react app
    - chmod +x ./scripts/buildReactApp.sh
    - ./scripts/buildReactApp.sh
    # Build and tag docker image
    - docker build -t ${IMAGE_NAME} -f Dockerfile.travis .
    - docker images
    - docker tag ${IMAGE_NAME} gcr.io/${PROJECT_NAME}/${IMAGE_NAME}:${RELEASE_VERSION}
    # Push docker image to gcloud storage
    - gcloud docker -- push gcr.io/${PROJECT_NAME}/${IMAGE_NAME}:${RELEASE_VERSION}
  - stage: deploy docker image to gcloud VM instance
    script:
    # Update container image in cluster
    - gcloud container clusters get-credentials ${CLUSTER_NAME} --zone ${ZONE_TAG}
    - kubectl set image ${DEPLOYMENT_NAME} ${IMAGE_NAME}=gcr.io/${PROJECT_NAME}/${IMAGE_NAME}:${RELEASE_VERSION}
